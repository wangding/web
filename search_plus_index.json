{"./":{"url":"./","title":"简介","keywords":"","body":"web 应用开发 本电子书含 web 应用开发课程的全部教学资料，包括：课程大纲、学习交流 QQ 群、课程视频、通关任务以及示例代码。 课程大纲 web 应用开发课程大纲 学习交流群 王顶老师的 QQ 学习交流群：301862163，加群时请报上自己的真实姓名，以及正在学习的课程内容。（经贸的学生不要加群） 课程视频 【待添加】 通关任务 按课程讲授的顺序，排列在电子书左侧导航中，所有通关任务对应有参考的示例代码，请见下面仓库的链接。 示例代码 html-demo 仓库，演示 HTML 各种技术。 css-demo 仓库，演示 CSS 各种技术。 js-demo 仓库，演示 JavaScript 编程技术。 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/README.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/README.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch12-javascript-intro.html":{"url":"chapters/ch12-javascript-intro.html","title":"概述","keywords":"","body":"第 12 章：JavaScript 概述 阅读参考资料 JavaScript 概述 掌握 Chrome Snippets 用法 要求： 打开 Chrome 浏览器 打开开发者工具（快捷键：F12），将开发者工具窗口脱离停靠，并将窗口最大化 在开发者工具中选择 Sources 选项卡 观察开发者工具的界面，分三栏：左侧导航窗格，中间代码编辑窗格，右侧代码调试窗格 左侧导航窗格切换到 Snippets 窗格 在 Snippets 窗格中，添加一个 Snippet（点击：+ New snippet） 将 Snippet 改名为 hello-world（在 Script Snippet #n 上点击鼠标右键，点击 Rename... 菜单项） 在中间的代码编辑窗口，输入代码：console.log('hello world');，保存代码（快捷键：Ctrl+S） 运行这个 Snippet（快捷键 Ctrl+Enter），运行结果在下方的 Console 窗格，运行代码会自动保存代码 运行 Snippet 后，焦点在 Console 窗口，清除 Console 窗口内容的快捷键：Ctrl+L 焦点在 Console 窗口时，Ctrl+Enter 会再次运行 Snippet，ESC 快捷键会隐藏 Console 窗格 在左侧窗格，鼠标右击 Snippet 名称，浮动菜单中，可以将 Snippet 另存为，本地代码文件（扩展名为：js） 左侧导航窗格切换到 Filesystem 窗格 在 Filesystem 窗格中，打开保存的本地代码文件，这里只能查看代码，不能运行代码 如果没有特殊说明，后续 JavaScript 练习，都在 Snippet 环境中编写、运行和调试 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch12-javascript-intro.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch12-javascript-intro.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch15-statement-structure.html":{"url":"chapters/ch15-statement-structure.html","title":"流程控制","keywords":"","body":"第 15 章：语句和程序结构 阅读参考资料 控制流与错误处理 循环与迭代 if 多路分支 要求： 用 else if 多路开关，实现分数（百分制）到等第的转换 提示用户输入分数 对用户输入的分数，做数据合法性校验，当用户输入错误时，提示出错信息 能够检查出如下错误： 用户输入为空 用户输入的数据类型不合法，例如：score = 'abc' 用户输入的数据不在合法的范围，例如：score = -7 或者 score = 107 score 和等第的关系如下： 90 80 70 60 0 如果用户输入的数据合法，在控制台打印分数和等第 输出格式，例如：score = 73，level = 可以 示例参考： if 多路分支 switch 多路分支 要求： 用 switch 多路开关，实现分数（百分制）到等第的转换 提示用户输入分数 对用户输入的分数，做数据合法性校验，当用户输入错误时，提示出错信息 能够检查出如下错误： 用户输入为空 用户输入的数据类型不合法，例如：score = 'abc' 用户输入的数据不在合法的范围，例如：score = -7 或者 score = 107 score 和等第的关系如下： 90 80 70 60 0 如果用户输入的数据合法，在控制台打印分数和等第 输出格式，例如：score = 73，level = 可以 示例参考： switch 多路分支 for 循环 要求： 用 for 循环实现 n! 计算功能 n! = n (n-1) ... * 1 在控制台输出 n! 运算结果，输出格式，例如：4! = 24 示例参考： for 循环 九九乘法表 要求： 用 for 循环在控制台打印九九乘法表 输出格式如下：1*1=1 1*2=2 2*2=4 1*3=3 2*3=6 3*3=9 1*4=4 2*4=8 3*4=12 4*4=16 1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 1*6=6 2*6=12 3*6=18 4*6=24 5*6=30 6*6=36 1*7=7 2*7=14 3*7=21 4*7=28 5*7=35 6*7=42 7*7=49 1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64 1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81 示例参考： 九九乘法表 do-while 循环 要求： 用 do-while 循环实现 n! 计算功能 n! = n (n-1) ... * 1 在控制台输出 n! 运算结果，输出格式，例如：4! = 24 示例参考： do-while 循环 while 循环 要求： 用 while 循环实现 n! 计算功能 n! = n (n-1) ... * 1 在控制台输出 n! 运算结果，输出格式，例如：4! = 24 示例参考： while 循环 for-in 循环 要求： 定义一个对象 me 如下：const me = { name: 'wangding', email: '408542507@qq.com', mobile: '13582027613' }; 用 for-in 循环在控制台输出 me 对象的各个字段 示例参考： for-in 循环 for-of 循环 要求： 用 while 循环生成斐波那契数列，并保存到数组中 用 for-of 循环将数组中的斐波那契数列，输出到控制台 示例参考： for-of 循环 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch15-statement-structure.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch15-statement-structure.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch16-function.html":{"url":"chapters/ch16-function.html","title":"函数","keywords":"","body":"第 16 章：函数 阅读参考资料 函数 二进熵函数 要求： 实现二进熵函数计算功能 提示用户输入概率 p 对 p 做数据合法性校验，能够检查出如下错误： p 为空值，例如：p = '' p 的数据类型错误，例如：p = 'abc' p 的取值范围错误，例如：p = 1.2 或者 p = -1.2 当检查 p 不合法时，继续提示用户输入概率 p H(p) = -plog(p) -(1-p)log(1-p) 二进熵函数计算结果，保留小数点后两位 将计算结果输出到控制台，输出格式，例如：h(0.2) = 0.72 bit 示例参考： 二进熵函数 递归函数 要求： 用递归函数实现 n! 计算功能 n! = n * (n-1)! 在控制台输出 n! 运算结果，输出格式，例如：4! = 24 示例参考： 递归函数 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch16-function.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch16-function.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch18-object.html":{"url":"chapters/ch18-object.html","title":"对象","keywords":"","body":"第 18 章：面向对象编程 阅读参考资料 使用对象 面向对象的细节 矩形计算器 要求： 定义 Rectangle 类，类中成员如下 私有数据 w 代表矩形宽度，初始值为 0 私有数据 h 代表矩形高度，初始值为 0 构造函数有两个参数，width 和 height，用来初始化私有数据 w 和 h getter 属性方法 area，得到矩形的面积，area = w * h getter 属性方法 perimeter，得到矩形的周长，perimeter = 2 * (w + h) 周长和面积精确到小数点后两位，调用 Util 类中的 roundFractional 实现 定义 Util 类，类中成员如下 静态方法 roundFractional，功能：保留小数点后 n 位 两个入口参数，x 做近似处理的数，n 小数点后的位数 函数返回值是近似处理后的 x 参考文章 JavaScript 浮点舍入误差 定义 App 类，类中成员如下 静态方法 main，功能：测试 Rectangle 类 控制台输出 w = 20, h = 10，矩形的周长和面积 控制台输出 w = 0.2, h = 0.1，矩形的周长和面积 输出格式，例如：r1: w = 20, h = 10, area = 200, perimeter = 60 r2: w = 0.2, h = 0.1, area = 0.02, perimeter = 0.6 调用 App 类的静态 main 方法 示例参考： 矩形计算器 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch18-object.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch18-object.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch01-html-basic.html":{"url":"chapters/ch01-html-basic.html","title":"HTML 基础","keywords":"","body":"第 1 章：HTML 基础 阅读参考资料 HTML 介绍 IBM web 开发者中心 搭建开发环境 方式一：导入虚拟机（推荐） 下载并安装 vmware workstation Pro 15+（已经安装 vmware workstation，跳过此步） 下载 mocha 虚拟机压缩文件 解压缩 mocha 虚拟机 用 vmware workstation，打开解压后的 mocha 虚拟机 启动 mocha 虚拟机 登录 mocha 虚拟机，用户名：wangding，密码：ddd 配置 mocha 虚拟机的网卡 IP 地址，具体操作请参考：教学视频 确保在 mocha 虚拟机中，ping www.baidu.com 可以正常执行 下载并安装 xshell 6 用 XShell 链接 mocha 虚拟机 配置 mocha 虚拟机的 git 参数，包括：user.name 和 user.email 在 GitHub 或码云创建测试仓库，确保 git 可以向远程仓库提交代码 方式二：从头安装 安装步骤请参考：Node.js 开发环境搭建 安装 CentOS 虚拟机，请参考：教学视频 熟悉开发环境的使用 熟悉开发环境的使用 熟悉常用的 linux 命令用法 熟悉 Git 命令的用法 熟悉 vim 的用法 Hello World 基本要求： 在 GitHub 上创建 html-demo 项目仓库 在仓库目录下，创建 01-hello-world 目录 在目录下添加 index.html 页面 页面标题为：hello world 页面正文为：hello HTML5!，这行文本作为 h1 元素的内容 将代码通过 GitHub Pages 功能发布上线 用浏览器测试查看发布上线的网页 示例参考： hello world 经典回忆 在仓库目录下，创建 02-basic 目录 在目录下添加 index.html 页面 页面标题为：经典回忆 页面第一行为 h1 元素，内容是：经典回忆 页面正文为一句引文，这行文本作为 p 元素的内容 引文中有 strong 强调文字 引文结束后，另起一行，写出引文的出处 引文的出处需要加上链接，链接到该文章的百度百科词条 引文后面是一个跟引文内容相关的配图 将代码通过 GitHub Pages 功能发布上线 用浏览器测试查看发布上线的网页 示例参考： 经典回忆 古诗 在仓库目录下，创建 03-text-basic 目录 在目录下添加 01-gu-shi.html 页面 页面标题是古诗的名称 页面第一行为 h1 元素，内容是古诗的名字 页面正文为古诗的句子，两句放到一行，这行文本作为 p 元素的内容 句子之间用两个半角空格间隔（注意：应该使用空格的实体符号） 将代码通过 GitHub Pages 功能发布上线 用浏览器测试查看发布上线的网页 示例参考： 静夜思 食谱 在 03-text-basic 目录下，添加 02-shi-pu.html 页面 页面标题是菜肴的名称 页面第一行为 h1 元素，内容是：宫保鸡丁的做法 页面正文为菜肴制作方法，见下面 宫保鸡丁，川菜系中的传统名菜，由鸡丁、干辣椒、花生米等炒制而成。由于其入口鲜辣，鸡肉的鲜嫩配合花生的香脆，广受大众欢迎。 相传宫保鸡丁是清朝光绪年间的署理四川总督丁宝桢所发明，是他招待客人时叫家厨煮的菜肴。由于丁宝桢后来被封为东宫少保（太子少保），所以被称为“丁宫保”，而这道菜亦被称为“宫保鸡丁” 原料 去骨鸡胸肉：一斤八两 花椒粒：两大匙 葱：两根（切段） 蛋白：一个 淀粉：三大匙 酱油：两大匙 蒜末：半茶匙 糖：半茶匙 白醋：一茶匙 色拉油：适量 盐：两茶匙 做法 先用蛋白一个、盐半茶匙及淀粉两大匙搅拌均匀，调成“腌料”，鸡胸肉切成约一厘米见方的碎丁并用“腌料”搅拌均匀，腌渍半小时。 用酱油一大匙、淀粉水一大匙、糖半茶匙、盐四分之一茶匙、白醋一茶匙、蒜末半茶匙调拌均匀，调成“综合调味料”。 鸡丁腌好以后，色拉油下锅烧热，先将鸡丁倒入锅内，用大火快炸半分钟，炸到变色之后，捞出来沥干油汁备用。 在锅里留下约两大匙油，烧热后将切好的干辣椒下锅，用小火炒香后，再放入花椒粒和葱段一起爆香。随后鸡丁重新下锅，用大火快炒片刻后，再倒入“综合调味料”继续快炒。 如果你采用正宗川菜做法，最后只需加入花生米，炒拌几下就可以起锅了。 如果你在北方，可加入黄瓜丁、胡萝卜丁和花生米，翻炒后起锅。 大千鸡 张大千居加拿大期间，曾按自己喜好改变宫保鸡丁的做法，并传授当地厨师，厨师将之命名为“大千鸡”，以兹纪念。大千鸡与宫保鸡丁不同之处，是使用经细工去皮、出骨、剔膜的鸡腿肉，以干辣椒、豆瓣酱为味，而且不用花生。 原料，做法和大千鸡为二级标题元素 原料的内容为无序列表 做法的内容是操作步骤，为有序列表 其他未提及的内容是普通段落 将代码通过 GitHub Pages 功能发布上线 用浏览器测试查看发布上线的网页 示例参考： 宫保鸡丁 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch01-html-basic.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch01-html-basic.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch02-mutimedia-embed.html":{"url":"chapters/ch02-mutimedia-embed.html","title":"多媒体和嵌入","keywords":"","body":"第 2 章：多媒体和嵌入 阅读参考资料 多媒体和嵌入 视频播放 基本要求： 在 html-demo 项目仓库下，创建 04-video 目录 在页面中实现视频播放（下载视频文件：wget https://wangding.github.io/html-demo/04-video/hutao.mp4） 将代码通过 GitHub Pages 功能发布上线 示例参考： 视频播放 音频播放 基本要求： 在 html-demo 项目仓库下，创建 05-audio 目录 在页面中实现音频播放（下载音频文件：wget https://wangding.github.io/html-demo/05-audio/lan-lian-hua.mp3） 将代码通过 GitHub Pages 功能发布上线 示例参考： 音频播放 嵌入 PDF 基本要求： 在 html-demo 项目仓库下，创建 06-pdf 目录 在页面中实现 PDF 文档查看（PDF 文件：） 将代码通过 GitHub Pages 功能发布上线 示例参考： 嵌入 PDF SVG 基本要求： 在 html-demo 项目仓库下，创建 07-svg 目录 在页面中展示两个圆环 一个圆环是 img 元素，外链的 png 图片 另一个圆环是 img 元素，外联的 svg 图片 自行制作圆环的 png 图片 自行编写圆环的 svg 代码 将代码通过 GitHub Pages 功能发布上线 示例参考： SVG 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch02-mutimedia-embed.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch02-mutimedia-embed.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch03-table-form.html":{"url":"chapters/ch03-table-form.html","title":"表格和表单","keywords":"","body":"第 3 章：表格和表单 阅读参考资料 表格 表单 人称代词 基本要求： 在 html-demo 项目仓库下，创建 08-table 目录 在页面中展示人称代词的表格 页面 title 为：人称代词 将代码通过 GitHub Pages 功能发布上线 示例参考： 人称代词 课程表 基本要求： 在 08-table 目录下 在页面中展示本学期的课程表 页面 title 为：课程表 将代码通过 GitHub Pages 功能发布上线 示例参考： 课程表 登录 基本要求： 在 html-demo 项目仓库下，创建 09-form 目录 在页面中实现登录功能 页面 title 为：login 页面有 h1 元素，内容是：登录 页面有 form 元素，内容是登录的交互控件 登录需要提交的字段有：用户名和密码 将代码通过 GitHub Pages 功能发布上线 示例参考： 登录 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch03-table-form.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch03-table-form.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch04-css-basic.html":{"url":"chapters/ch04-css-basic.html","title":"CSS 起步","keywords":"","body":"第 4 章：CSS 基础 阅读参考资料 CSS 初步 CSS 入门 基本要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置标题一为红色 设置段落和无序列表为绿色 设置无序列表的项目符号为方块 给项目2 的 li 元素添加 class 属性: emphasize 设置 emphasize 的样式，字体颜色为橙色，字体加粗 设置标题一邻接的段落样式，字体大小为默认的 2 倍 设置链接的状态样式，鼠标移到链接上时，链接没有下划线，访问过的链接是红色 示例参考： CSS 入门 个人简介 基本要求： 在 code-pen 代码中进行如下 CSS 样式设置 将一级标题设为粉红色，并添加 10 像素宽的点状下边框 将二级标题设为斜体 为联系人列表设置 10px 紫色边框，#eee 背景色，30px 行高，以及内边距 对 job-title 类设置字体样式：加粗和灰色 设置链接在鼠标悬停时变为绿色，没有下划线 示例参考： 个人简介 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch04-css-basic.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch04-css-basic.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch05-cascade-inherit.html":{"url":"chapters/ch05-cascade-inherit.html","title":"层叠与继承","keywords":"","body":"第 5 章：层叠和继承 阅读参考资料 层叠和继承 层叠 基本要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置标题一为蓝色，层叠、覆盖之前设置的红色样式 示例参考： 层叠 继承 1 基本要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置网页字体为绿色，所有元素继承这个样式 设置 emphasize 类的样式，字体为红色，覆盖继承 设置 span 元素样式，阻止继承，恢复成浏览器默认样式 示例参考： 继承 1 继承 2 基本要求： 在 code-pen 代码中进行如下 CSS 样式设置 添加一个样式设置，将链接的背景色改成白色。注意，不要使用颜色值或颜色关键字。 示例参考： 继承 2 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch05-cascade-inherit.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch05-cascade-inherit.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch06-selectors.html":{"url":"chapters/ch06-selectors.html","title":"选择器","keywords":"","body":"第 6 章：选择器 阅读参考资料 选择器 在线练习 CSS 选择器语法 要求： 将 CSS Diner 打通关 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch06-selectors.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch06-selectors.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch07-box.html":{"url":"chapters/ch07-box.html","title":"盒模型","keywords":"","body":"第 7 章：盒模型 阅读参考资料 盒模型 块和内联元素的盒模型 要求： 在 code-pen 代码中进行如下 CSS 样式设置 给 p, ul 加 2px 紫色实线边框和 0.5em 内边距 给 .block 和 li 加 2px 蓝色实线边框及 0.5em 内边距 设置 li 没有项目符号，设置 ul 内部为 flex 弹性盒子布局 设置 block 类的样式为块样式 示例参考： 块和内联元素的盒模型 普通盒子和 border-box 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 box 类的样式，5px 紫色实线边框，背景色为浅灰色，内边距为 40px，宽度为 300px，高度为 150px，外边距为 40px 设置 alternate 类的盒子模型为 border-box，观察两个盒子在页面上的尺寸差异 用 Chrome 开发者工具观察普通盒子和 border-box 盒子的尺寸差异 示例参考： 普通盒子和 border-box 负外边距 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置容器 container 的样式：边框 5px 蓝色实线，外边距 40px 设置盒子 box 的样式：边框 5px 紫色实线，浅灰背景色，高 150px，内边距 10px，外边距 40px 将 box 上外边距改成 -40px，其他不变，观察 box 和 container 的位置关系 示例参考： 负外边距 外边距折叠 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 container 容器样式：边框 5px 紫色实线 设置段落样式：边框 5px 蓝色实线，上下内边距 10px，左右内边距 0px 设置第一个段落样式：下外边距 50px 设置第二个段落样式：上外边距 30px 将第二个段落的上外边距改为 0px，观察外边距折叠现象 示例参考： 外边距折叠 精确控制边框样式 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置容器 container 的样式：上边框 5px 绿色点状线，右边框 1px 黑色实线，下边框 20px 深蓝色双实线 设置 box 的样式：所有边框线为 1px 黑色实线，上边框为点线，右边框的宽度为 20px，下边框的颜色为粉色，内边距为 20px，背景色为浅灰色 示例参考： 精确控制边框样式 内联盒子 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置段落样式：边框 2px 紫色实线，宽度 300px，行高 30px 设置 span 样式：宽度 80px，高度 50px，边框 2px 蓝色实线，浅蓝背景色，外边距 20px，内边距 20px 观察 span 覆盖了部分段落文字，导致排版混乱 修改 span 的显示类型为 inline-block，观察修改后的 span 的效果，修改前后 span 盒子尺寸的变化以及边距的效果 示例参考： 内联盒子 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch07-box.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch07-box.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch08-background-border.html":{"url":"chapters/ch08-background-border.html","title":"背景与边框","keywords":"","body":"第 8 章：背景色和边框 阅读参考资料 背景色和边框 背景色 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 box 样式：背景色 #567895，宽度 500px，内边距 20px 设置二级标题样式：背景色黑色，字体大小 2em，颜色白色 设置 span 元素样式：背景色白色半透明 示例参考： 背景色 背景图片 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 wrapper 容器样式：容器内部为 flex 布局 设置 box 样式：宽度 200px, 高度 100px，内边距 0.5em，边框 1px 灰色实线，外边距 20px 设置 a div 的背景图片为气球 设置 b div 的背景图片为五角星 示例参考： 背景图片 控制背景图片平铺 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 box 样式：宽度 200px, 高度 100px，内边距 0.5em，边框 1px 灰色实线，外边距 20px 设置 box 样式：背景图片为五角星，不平铺（尝试水平平铺和垂直平铺） 示例参考： 控制背景图片平铺 利用边框样式绘制几何形状 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 .box 默认样式：宽度 300px，高度 300px，盒子模型 border-box，边框 10px 蓝色实线 设置边框为圆角矩形，圆角大小为 30px 利用边框样式，将 .box 显示为蓝色圆环 利用边框样式，将 .box 显示为蓝色圆形 利用边框样式，将 .box 显示为蓝色左上直角三角形 利用边框样式，将 .box 显示为蓝色右上直角三角形 利用边框样式，将 .box 显示为蓝色右下直角三角形 利用边框样式，将 .box 显示为蓝色左下直角三角形 利用边框样式，将 .box 显示为蓝色左等腰三角形 利用边框样式，将 .box 显示为蓝色上等腰三角形 利用边框样式，将 .box 显示为蓝色右等腰三角形 利用边框样式，将 .box 显示为蓝色下等腰三角形 利用边框样式，将 .box 显示为蓝色沙漏 利用边框样式，将 .box 显示为蓝色蝴蝶结 利用边框样式，将 .box 显示为蓝色左半圆 利用边框样式，将 .box 显示为蓝色上半圆 利用边框样式，将 .box 显示为蓝色右半圆 利用边框样式，将 .box 显示为蓝色下半圆 利用边框样式，将 .box 显示为蓝色左四分之一圆 利用边框样式，将 .box 显示为蓝色上四分之一圆 利用边框样式，将 .box 显示为蓝色右四分之一圆 利用边框样式，将 .box 显示为蓝色下四分之一圆 示例参考： 几何形状 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch08-background-border.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch08-background-border.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch09-table.html":{"url":"chapters/ch09-table.html","title":"格式化表格","keywords":"","body":"第 9 章：格式化表格 阅读参考资料 格式化表格 第一人称 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置表格基本样式：总宽度 500px，添加表格线 1px 黑色实线，单元格内文字行高 40px，水平居中，表标题行高 60px 设置表格列宽：第一列（单数和复数）宽度为表格总宽度的 20%，第二列（第一人称，等）宽度为 20%，第三列（符号）宽度为 10% 格式化表格为三线表格，粗线的宽度为 5px 示例参考： 第一人称 课程表 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置表格基本样式：添加表格线 1px 黑色实线，单元格内文字水平居中 设置表格列宽：第一列（时间）至第六列（周五）宽度为 150px，最后两列（周六和周日）宽度为 80px 设置两门课程的背景色：信息科学基础及实验课背景色为浅黄色，Web 应用开发及实验课背景色为浅绿色 格式化表头样式：背景色为灰色 表格中间加个 3px 的粗线，将上午和下午两个时段分隔开 最后两列（周六和周日）设置背景为浅灰色（#f0f0f0） 示例参考： 课程表 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch09-table.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch09-table.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch10-text.html":{"url":"chapters/ch10-text.html","title":"格式化文本","keywords":"","body":"第 10 章：格式化文本 阅读参考资料 格式化文本 静夜思 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置全文字体样式：字体为宋体，颜色为绿色，文字水平居中，字体大小 25px 设置标题一样式：字体大小为 30px，行高为 60px，字体带 2px 蓝色波浪下划线 示例参考： 静夜思 宫保鸡丁 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置全文字体样式：字体大小 25px，行高 40px 设置标题一样式：文字水平居中 设置标题一和标题二样式：字体为宋体 示例参考： 宫保鸡丁 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch10-text.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch10-text.html\"});gitalk.render(\"gitalk-container\"); "},"chapters/ch11-layout.html":{"url":"chapters/ch11-layout.html","title":"CSS 布局","keywords":"","body":"第 11 章：布局 阅读参考资料 布局 弹性盒子 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置页面内外边距为 0px，高度 100% 设置 box1 背景色为浅绿色，box2 背景色为浅蓝色，box3 背景色为浅粉色，三个 box 的高度为浏览器窗口高度的 100% 观察三个 box 的布局，应该为三行一列 使用弹性盒子方式，修改三个 box 的布局，为一行三列布局 示例参考： 弹性盒子 网格 1 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置页面内外边距为 0px，高度 100% 设置 box1 ~ box6 背景色为浅绿色 观察六个 box 的布局，应该为六行一列 使用网格布局，修改六个 box 的布局，为二行三列布局，其中 box 之间的距离为 10px 示例参考： 网格 1 网格 2 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置页面内外边距为 0px，高度 100% 设置 box1 ~ box3 背景色为浅绿色 观察三个 box 的布局，应该为三行一列 使用网格布局，修改三个 box 的布局，为二行三列布局 其中 box2 跨两行，占第一列 其中 box1 跨两列，占第一行 其中 box3 占第二行，第三列 示例参考： 网格 2 浮动 1 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置段落 p 的宽度为 600px 设置 box 的样式为：宽度 150px，高度 150px，左边距 30px，背景色浅绿色，边框 2px 绿色实线，边框圆角半径 5px，内边距 10px 观察 box 和段落 p 的布局 修改 box 样式，让段落 p 环绕在 box 的右侧 示例参考： 浮动 1 浮动 2 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 body，html 和 div 初始样式为，内外边距 0px，高度 100% 设置 box1 ~ box3 三个 div 的宽度为 33% 设置 box1 背景色为浅绿，box2 背景色为浅蓝，box3 背景色为浅粉 观察 box1 ~ box3 的布局，应该是三行一列 设置浮动，让 box1 ~ box3 的布局为一行三列 示例参考： 浮动 2 静态定位 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 body 盒子样式，宽度 500px，水平居中 设置标题一水平居中 设置段落样式，背景色浅绿色，边框 2px 绿色实线，外边距 10px，内边距 10px，边框圆角半径 5px 示例参考： 静态定位 相对定位 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 body 盒子样式，宽度 500px，水平居中 设置标题一水平居中 设置段落样式，背景色浅绿色，边框 2px 绿色实线，外边距 10px，内边距 10px，边框圆角半径 5px 设置 positioned 段落样式：背景色浅粉色，边框 2px 红色实线 观察 positioned 段落和其他段落之间的位置关系 修改 positioned 段落样式，相对其原来位置向下移动 30px，向右移动 30px 示例参考： 相对定位 绝对定位 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 body 盒子样式，宽度 500px，水平居中 设置标题一水平居中 设置段落样式，背景色浅绿色，边框 2px 绿色实线，外边距 10px，内边距 10px，边框圆角半径 5px 设置 positioned 段落样式：背景色浅粉色，边框 2px 红色实线 观察 positioned 段落和其他段落之间的位置关系 修改 positioned 段落样式，使其位置在浏览器窗口的左上角，水平 150px 垂直 30px（使用绝对定位） 设置最后一个段落的高度为 800px，上下滚动页面，观察 positioned 段落是否跟随滚动 示例参考： 绝对定位 固定定位 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 body 盒子样式，宽度 500px，水平居中 设置标题一水平居中 设置段落样式，背景色浅绿色，边框 2px 绿色实线，外边距 10px，内边距 10px，边框圆角半径 5px 设置 positioned 段落样式：背景色浅粉色，边框 2px 红色实线 观察 positioned 段落和其他段落之间的位置关系 修改 positioned 段落样式，使其位置在浏览器窗口的左上角，水平 30px 垂直 30px（使用固定定位） 设置最后一个段落的高度为 800px，上下滚动页面，观察 positioned 段落是否跟随滚动 示例参考： 固定定位 粘连定位 要求： 在 code-pen 代码中进行如下 CSS 样式设置 设置 body 盒子样式，宽度 500px，水平居中 设置标题一水平居中 设置段落样式，背景色浅绿色，边框 2px 绿色实线，外边距 10px，内边距 10px，边框圆角半径 5px 设置 positioned 段落样式：背景色浅粉色，边框 2px 红色实线 观察 positioned 段落和其他段落之间的位置关系 修改 positioned 段落样式，使其位置在容器的左上角，水平 30px 垂直 30px（使用粘连定位） 设置第一个段落的高度为 800px，最后一个段落的高度为 1800px，上下滚动页面，观察 positioned 段落是否跟随滚动 示例参考： 粘连定位 表格布局 要求： 在 code-pen 代码中进行如下 CSS 样式设置 使用表格布局，格式化个人信息提交表单 使表单呈现为三行两列 所有 label（第一列）的宽度为 200px，右侧内边距为 5%，文字右对齐，下外边距为 10px 所有文本框（第二列）的宽度为 300px，下外边距为 10px 将段落文字设置为表头文字，并显示在表格的底部，文字是斜体灰色，水平居中 示例参考： 表格布局 多列布局 要求： 在 code-pen 代码中进行如下 CSS 样式设置 将整个页面设置为多列布局，列的宽度为 200px box1 的高度为 200px，背景色为淡绿色 box2 的高度为 200px，背景色为淡蓝色 示例参考： 多列布局 2021 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch11-layout.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"9bf2c6e3fa4e8d0e26a3\",\"clientSecret\":\"f8465afbfde1b3bf69f25202070a3b64285a816b\",\"repo\":\"web\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"WEB\"],\"id\":\"/chapters/ch11-layout.html\"});gitalk.render(\"gitalk-container\"); "}}